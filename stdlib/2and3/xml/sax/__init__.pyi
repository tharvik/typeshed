# Stubs for xml.sax

from typing import IO, Optional, Sequence, Union
from xml.sax.reader import XMLReader
from xml.sax.handler import ContentHandler, ErrorHandler
from xml.sax.xmlreader import Locator
import sys


def make_parser(parser_list: Sequence[str] = ...) -> XMLReader: ...
def parse(filename_or_stream: Union[str, IO[str]], handler: ContentHandler,
          error_handler: ErrorHandler = ...) -> None: ...
if sys.version_info >= (3, 5):
    def parseString(string: Union[str, bytes], handler: ContentHandler,
                    error_handler: ErrorHandler = ...) -> None: ...
else:
    def parseString(string: bytes, handler: ContentHandler,
                    error_handler: ErrorHandler = ...) -> None: ...


class SAXException(Exception):
    def __init__(self, msg: str,
                 exception: Optional[BaseException] = ...) -> None: ...
    def getMessage(self) -> str: ...
    def getException(self) -> Optional[BaseException]: ...

class SAXParseException(SAXException, Locator):
    def __init__(self, msg: str, exception: BaseException,
                 locator: Locator) -> None: ...
    def getColumnNumber(self) -> int: ...
    def getLineNumber(self) -> int: ...
    def getPublicId(self) -> int: ...
    def getSystemId(self) -> int: ...

class SAXNotRecognizedException(SAXException): ...
class SAXNotSupportedException(SAXException): ...
